services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qosan-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:80"
    environment:
      - APP_NAME=${APP_NAME:-Qosan}
      - APP_ENV=${APP_ENV:-production}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-http://localhost:8000}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-qosan}
      - DB_USERNAME=${DB_USERNAME:-qosan}
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_STORE=${CACHE_STORE:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - MAIL_MAILER=${MAIL_MAILER:-log}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    volumes:
      - storage-data:/var/www/html/storage/app
      - ./database:/var/www/html/database
    depends_on:
      - db
      - redis
    networks:
      - qosan-network

  db:
    image: mysql:8.0
    container_name: qosan-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-qosan}
      - MYSQL_USER=${DB_USERNAME:-qosan}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "${DB_EXTERNAL_PORT:-3306}:3306"
    networks:
      - qosan-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: qosan-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-null}
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"
    networks:
      - qosan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
  storage-data:
    driver: local

networks:
  qosan-network:
    driver: bridge
